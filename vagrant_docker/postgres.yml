---
- hosts: all
  become: yes
  remote_user: vagrant

  vars_files:
    - vars.yml

  pre_tasks:
    - name: Update apt repo and cache on Ubuntu box
      apt:
        update_cache: yes
        force_apt_get: yes
        cache_valid_time: 3600

    - name: Upgrade all packages on servers
      apt:
        upgrade: dist
        force_apt_get: yes

    - name: Install required packages
      apt:
        name:
          - wget
          - python3-psycopg2
          - acl
        state: latest

    - name: Set up Postgres 14 repo
      shell: |
        sudo echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > ./deb.txt &&
        sudo cp ./deb.txt /etc/apt/sources.list.d/pgdg.list &&
        sudo wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -

    - name: Install PostgreSQL and dependencies
      apt:
        update_cache: yes
        force_apt_get: yes
        cache_valid_time: 3600
        name:
          - postgresql-14
          - postgresql-client-14
          - postgresql-14-cron
          - postgresql-14-hypopg
          - postgresql-14-pg-stat-kcache
          - postgresql-14-pg-qualstats
          - postgresql-14-repack
          - postgresql-14-repmgr
        state: present

    - name: Ensure PostgreSQL is listening on *
      lineinfile:
        dest: /etc/postgresql/14/main/postgresql.conf
        regexp: '^listen_addresses\s*='
        line: "listen_addresses='*'"
        state: present
      notify: Restart Postgres

    - name: Add new configuration to "pg_hba.conf"
      blockinfile:
        dest: /etc/postgresql/14/main/pg_hba.conf
        block: |
          host    all             all             0.0.0.0/0                md5
          host    all             all             ::/0                     md5
      notify: Restart Postgres

    - name: "Find out if PostgreSQL is initialized"
      ansible.builtin.stat:
        path: "/etc/postgresql/14/main/pg_hba.conf"
      register: postgres_data

    - name: "Initialize PostgreSQL"
      shell: "postgresql-setup initdb"
      when: not postgres_data.stat.exists

    - name: "Start and enable services"
      service: "name={{ item }} state=started enabled=yes"
      with_items:
        - postgresql

  handlers:
    - name: Restart Postgres
      service: name=postgresql state=restarted

